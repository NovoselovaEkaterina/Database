select DBMS_CRYPTO.HASH(rawtohex('foo') ,2) as md5 from dual;

CREATE TABLE operations
(
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    article_id NUMBER(*,0),
    debit NUMBER(18,2),
    credit NUMBER(18,2),
    create_date TIMESTAMP(3),
    balance_id NUMBER(*,0)
);

CREATE TABLE articles
(
    id NUMBER(*,0) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(50 BYTE)
);


CREATE TABLE balance
(
    id NUMBER(*,0) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    create_date TIMESTAMP(3),
    debit NUMBER(18,2),
    credit NUMBER(18,2),
    amount NUMBER(18,2)
);

ALTER TABLE operations ADD CONSTRAINT fk_operations_articles FOREIGN KEY (article_id)
	  REFERENCES articles (id);
ALTER TABLE operations ADD CONSTRAINT fk_operations_balance FOREIGN KEY (balance_id)
	  REFERENCES balance (id);

insert into articles(name) values('Salary');
insert into articles(name) values('Taxes');
insert into articles(name) values('Shopping');
insert into articles(name) values('Shopping22');

insert into operations(article_id, debit, credit, create_date) 
values((select id from articles where name='Salary'),1000,0,'07-04-20 10:00:00');
insert into operations(article_id, debit, credit, create_date) 
values((select id from articles where name='Taxes'),0,20,'08-04-20 10:00:00');
insert into operations(article_id, debit, credit, create_date) 
values((select id from articles where name='Shopping'),0,50,'09-04-20 10:00:00');
insert into operations(article_id, debit, credit, create_date) 
values((select id from articles where name='Shopping'),0,4,'09-04-20 12:00:00');
insert into operations(article_id, debit, credit, create_date) 
values((select id from articles where name='Shopping'),0,4,'09-04-20 12:00:00');

--1 —формировать баланс. ≈сли сумма прибыли меньше некоторой суммы Ц транзакцию откатить. 
insert into balance(create_date, debit,credit,amount) values(
'08-04-20 10:00:00',
(select sum(debit) from operations where create_date between '01-04-20 10:00:00' and '08-04-20 10:00:00'),
(select sum(credit) from operations where create_date between '01-04-20 10:00:00' and '08-04-20 10:00:00'),
(select sum(debit) from operations where create_date between '01-04-20 10:00:00' and '08-04-20 10:00:00')-
(select sum(credit) from operations where create_date between '01-04-20 10:00:00' and '08-04-20 10:00:00'));

delete balance;










